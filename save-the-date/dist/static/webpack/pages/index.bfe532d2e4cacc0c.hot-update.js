/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[7].oneOf[4].use[2]!./node_modules/next/font/local/target.css?{\"path\":\"src/fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./CrimsonText.ttf\",\"display\":\"swap\",\"preload\":true}],\"variableName\":\"CrimsonText\"}":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[7].oneOf[4].use[2]!./node_modules/next/font/local/target.css?{"path":"src/fonts/index.ts","import":"","arguments":[{"src":"./CrimsonText.ttf","display":"swap","preload":true}],"variableName":"CrimsonText"} ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face {\\nfont-family: '__CrimsonText_532962';\\nsrc: url(/_next/static/media/5558d1cd0bbe6b75-s.p.ttf) format('truetype');\\nfont-display: swap;\\n}@font-face {font-family: '__CrimsonText_Fallback_532962';src: local(\\\"Arial\\\");ascent-override: 107.54%;descent-override: 39.72%;line-gap-override: 0.00%;size-adjust: 88.27%\\n}.__className_532962 {font-family: '__CrimsonText_532962', '__CrimsonText_Fallback_532962'\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://node_modules/next/font/local/%3Cinput%20css%20HtjTgV%3E\",\"<no source>\"],\"names\":[],\"mappings\":\"AAAA;AACA,mCAAwB;AACxB,yEAAyE;AACzE,kBAAkB;AAClB,CCJA,YAAA,6CAAA,oBAAA,yBAAA,yBAAA,yBAAA,mBAAA;CAAA,qBAAA,oEAAA;CAAA\",\"sourcesContent\":[\"@font-face {\\nfont-family: CrimsonText;\\nsrc: url(/_next/static/media/5558d1cd0bbe6b75-s.p.ttf) format('truetype');\\nfont-display: swap;\\n}\\n\",null],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"style\": {\"fontFamily\":\"'__CrimsonText_532962', '__CrimsonText_Fallback_532962'\"},\n\t\"className\": \"__className_532962\"\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZls0XS51c2VbMV0hLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZvbnQtbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzRdLnVzZVsyXSEuL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvbG9jYWwvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJzcmMvZm9udHMvaW5kZXgudHNcIixcImltcG9ydFwiOlwiXCIsXCJhcmd1bWVudHNcIjpbe1wic3JjXCI6XCIuL0NyaW1zb25UZXh0LnR0ZlwiLFwiZGlzcGxheVwiOlwic3dhcFwiLFwicHJlbG9hZFwiOnRydWV9XSxcInZhcmlhYmxlTmFtZVwiOlwiQ3JpbXNvblRleHRcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQ0FBa0MsbUJBQU8sQ0FBQyxvSkFBZ0U7QUFDMUc7QUFDQTtBQUNBLHNEQUFzRCxzQ0FBc0MsNEVBQTRFLHFCQUFxQixHQUFHLFlBQVksNkNBQTZDLHNCQUFzQix5QkFBeUIseUJBQXlCLHlCQUF5QixzQkFBc0IscUJBQXFCLHVFQUF1RSxTQUFTLHNJQUFzSSxZQUFZLGFBQWEsYUFBYSxvREFBb0QsaUJBQWlCLHFDQUFxQywyQkFBMkIsNEVBQTRFLHFCQUFxQixHQUFHLDBCQUEwQjtBQUNwNEI7QUFDQTtBQUNBLFdBQVcsdUVBQXVFO0FBQ2xGO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9mb250L2xvY2FsL3RhcmdldC5jc3M/ZGUzNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL3J1bnRpbWUvYXBpLmpzXCIpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGZvbnQtZmFjZSB7XFxuZm9udC1mYW1pbHk6ICdfX0NyaW1zb25UZXh0XzUzMjk2Mic7XFxuc3JjOiB1cmwoL19uZXh0L3N0YXRpYy9tZWRpYS81NTU4ZDFjZDBiYmU2Yjc1LXMucC50dGYpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG5mb250LWRpc3BsYXk6IHN3YXA7XFxufUBmb250LWZhY2Uge2ZvbnQtZmFtaWx5OiAnX19Dcmltc29uVGV4dF9GYWxsYmFja181MzI5NjInO3NyYzogbG9jYWwoXFxcIkFyaWFsXFxcIik7YXNjZW50LW92ZXJyaWRlOiAxMDcuNTQlO2Rlc2NlbnQtb3ZlcnJpZGU6IDM5LjcyJTtsaW5lLWdhcC1vdmVycmlkZTogMC4wMCU7c2l6ZS1hZGp1c3Q6IDg4LjI3JVxcbn0uX19jbGFzc05hbWVfNTMyOTYyIHtmb250LWZhbWlseTogJ19fQ3JpbXNvblRleHRfNTMyOTYyJywgJ19fQ3JpbXNvblRleHRfRmFsbGJhY2tfNTMyOTYyJ1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vbm9kZV9tb2R1bGVzL25leHQvZm9udC9sb2NhbC8lM0NpbnB1dCUyMGNzcyUyMEh0alRnViUzRVwiLFwiPG5vIHNvdXJjZT5cIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7QUFDQSxtQ0FBd0I7QUFDeEIseUVBQXlFO0FBQ3pFLGtCQUFrQjtBQUNsQixDQ0pBLFlBQUEsNkNBQUEsb0JBQUEseUJBQUEseUJBQUEseUJBQUEsbUJBQUE7Q0FBQSxxQkFBQSxvRUFBQTtDQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBmb250LWZhY2Uge1xcbmZvbnQtZmFtaWx5OiBDcmltc29uVGV4dDtcXG5zcmM6IHVybCgvX25leHQvc3RhdGljL21lZGlhLzU1NThkMWNkMGJiZTZiNzUtcy5wLnR0ZikgZm9ybWF0KCd0cnVldHlwZScpO1xcbmZvbnQtZGlzcGxheTogc3dhcDtcXG59XFxuXCIsbnVsbF0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJzdHlsZVwiOiB7XCJmb250RmFtaWx5XCI6XCInX19Dcmltc29uVGV4dF81MzI5NjInLCAnX19Dcmltc29uVGV4dF9GYWxsYmFja181MzI5NjInXCJ9LFxuXHRcImNsYXNzTmFtZVwiOiBcIl9fY2xhc3NOYW1lXzUzMjk2MlwiXG59O1xubW9kdWxlLmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[7].oneOf[4].use[2]!./node_modules/next/font/local/target.css?{\"path\":\"src/fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./CrimsonText.ttf\",\"display\":\"swap\",\"preload\":true}],\"variableName\":\"CrimsonText\"}\n"));

/***/ }),

/***/ "./node_modules/next/font/local/target.css?{\"path\":\"src/fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./CrimsonText.ttf\",\"display\":\"swap\",\"preload\":true}],\"variableName\":\"CrimsonText\"}":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/local/target.css?{"path":"src/fonts/index.ts","import":"","arguments":[{"src":"./CrimsonText.ttf","display":"swap","preload":true}],"variableName":"CrimsonText"} ***!
  \**************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[4].use[1]!../../dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[7].oneOf[4].use[2]!./target.css?{\"path\":\"src/fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./CrimsonText.ttf\",\"display\":\"swap\",\"preload\":true}],\"variableName\":\"CrimsonText\"} */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[7].oneOf[4].use[2]!./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"src/fonts/index.ts\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./CrimsonText.ttf\\\",\\\"display\\\":\\\"swap\\\",\\\"preload\\\":true}],\\\"variableName\\\":\\\"CrimsonText\\\"}\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[4].use[1]!../../dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[7].oneOf[4].use[2]!./target.css?{\"path\":\"src/fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./CrimsonText.ttf\",\"display\":\"swap\",\"preload\":true}],\"variableName\":\"CrimsonText\"} */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[7].oneOf[4].use[2]!./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"src/fonts/index.ts\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./CrimsonText.ttf\\\",\\\"display\\\":\\\"swap\\\",\\\"preload\\\":true}],\\\"variableName\\\":\\\"CrimsonText\\\"}\",\n      function () {\n        content = __webpack_require__(/*! !!../../dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[4].use[1]!../../dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[7].oneOf[4].use[2]!./target.css?{\"path\":\"src/fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./CrimsonText.ttf\",\"display\":\"swap\",\"preload\":true}],\"variableName\":\"CrimsonText\"} */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[7].oneOf[4].use[2]!./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"src/fonts/index.ts\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./CrimsonText.ttf\\\",\\\"display\\\":\\\"swap\\\",\\\"preload\\\":true}],\\\"variableName\\\":\\\"CrimsonText\\\"}\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9mb250L2xvY2FsL3RhcmdldC5jc3M/e1wicGF0aFwiOlwic3JjL2ZvbnRzL2luZGV4LnRzXCIsXCJpbXBvcnRcIjpcIlwiLFwiYXJndW1lbnRzXCI6W3tcInNyY1wiOlwiLi9Dcmltc29uVGV4dC50dGZcIixcImRpc3BsYXlcIjpcInN3YXBcIixcInByZWxvYWRcIjp0cnVlfV0sXCJ2YXJpYWJsZU5hbWVcIjpcIkNyaW1zb25UZXh0XCJ9IiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxxTUFBeUY7QUFDM0csMEJBQTBCLG1CQUFPLENBQUMsbXhCQUF1WDs7QUFFelo7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLG14QkFBdVg7QUFDN1g7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyxteEJBQXVYOztBQUVqWjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9mb250L2xvY2FsL3RhcmdldC5jc3M/ZTUzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbNF0udXNlWzFdIS4uLy4uL2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZm9udC1sb2FkZXIvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbNF0udXNlWzJdIS4vdGFyZ2V0LmNzcz97XFxcInBhdGhcXFwiOlxcXCJzcmMvZm9udHMvaW5kZXgudHNcXFwiLFxcXCJpbXBvcnRcXFwiOlxcXCJcXFwiLFxcXCJhcmd1bWVudHNcXFwiOlt7XFxcInNyY1xcXCI6XFxcIi4vQ3JpbXNvblRleHQudHRmXFxcIixcXFwiZGlzcGxheVxcXCI6XFxcInN3YXBcXFwiLFxcXCJwcmVsb2FkXFxcIjp0cnVlfV0sXFxcInZhcmlhYmxlTmFtZVxcXCI6XFxcIkNyaW1zb25UZXh0XFxcIn1cIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uLy4uL2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzRdLnVzZVsxXSEuLi8uLi9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZvbnQtbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzRdLnVzZVsyXSEuL3RhcmdldC5jc3M/e1xcXCJwYXRoXFxcIjpcXFwic3JjL2ZvbnRzL2luZGV4LnRzXFxcIixcXFwiaW1wb3J0XFxcIjpcXFwiXFxcIixcXFwiYXJndW1lbnRzXFxcIjpbe1xcXCJzcmNcXFwiOlxcXCIuL0NyaW1zb25UZXh0LnR0ZlxcXCIsXFxcImRpc3BsYXlcXFwiOlxcXCJzd2FwXFxcIixcXFwicHJlbG9hZFxcXCI6dHJ1ZX1dLFxcXCJ2YXJpYWJsZU5hbWVcXFwiOlxcXCJDcmltc29uVGV4dFxcXCJ9XCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZls0XS51c2VbMV0hLi4vLi4vZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mb250LWxvYWRlci9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZls0XS51c2VbMl0hLi90YXJnZXQuY3NzP3tcXFwicGF0aFxcXCI6XFxcInNyYy9mb250cy9pbmRleC50c1xcXCIsXFxcImltcG9ydFxcXCI6XFxcIlxcXCIsXFxcImFyZ3VtZW50c1xcXCI6W3tcXFwic3JjXFxcIjpcXFwiLi9Dcmltc29uVGV4dC50dGZcXFwiLFxcXCJkaXNwbGF5XFxcIjpcXFwic3dhcFxcXCIsXFxcInByZWxvYWRcXFwiOnRydWV9XSxcXFwidmFyaWFibGVOYW1lXFxcIjpcXFwiQ3JpbXNvblRleHRcXFwifVwiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/font/local/target.css?{\"path\":\"src/fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./CrimsonText.ttf\",\"display\":\"swap\",\"preload\":true}],\"variableName\":\"CrimsonText\"}\n"));

/***/ }),

/***/ "./src/fonts/index.ts":
/*!****************************!*\
  !*** ./src/fonts/index.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CrimsonText: function() { return /* reexport default from dynamic */ next_font_local_target_css_path_src_fonts_index_ts_import_arguments_src_CrimsonText_ttf_display_swap_preload_true_variableName_CrimsonText___WEBPACK_IMPORTED_MODULE_1___default.a; },\n/* harmony export */   GreatVibes: function() { return /* reexport default from dynamic */ next_font_local_target_css_path_src_fonts_index_ts_import_arguments_src_GreatVibes_ttf_display_swap_preload_true_variableName_GreatVibes___WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var next_font_local_target_css_path_src_fonts_index_ts_import_arguments_src_GreatVibes_ttf_display_swap_preload_true_variableName_GreatVibes___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/font/local/target.css?{\"path\":\"src/fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./GreatVibes.ttf\",\"display\":\"swap\",\"preload\":true}],\"variableName\":\"GreatVibes\"} */ \"./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"src/fonts/index.ts\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./GreatVibes.ttf\\\",\\\"display\\\":\\\"swap\\\",\\\"preload\\\":true}],\\\"variableName\\\":\\\"GreatVibes\\\"}\");\n/* harmony import */ var next_font_local_target_css_path_src_fonts_index_ts_import_arguments_src_GreatVibes_ttf_display_swap_preload_true_variableName_GreatVibes___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_font_local_target_css_path_src_fonts_index_ts_import_arguments_src_GreatVibes_ttf_display_swap_preload_true_variableName_GreatVibes___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_local_target_css_path_src_fonts_index_ts_import_arguments_src_CrimsonText_ttf_display_swap_preload_true_variableName_CrimsonText___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/font/local/target.css?{\"path\":\"src/fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./CrimsonText.ttf\",\"display\":\"swap\",\"preload\":true}],\"variableName\":\"CrimsonText\"} */ \"./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"src/fonts/index.ts\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./CrimsonText.ttf\\\",\\\"display\\\":\\\"swap\\\",\\\"preload\\\":true}],\\\"variableName\\\":\\\"CrimsonText\\\"}\");\n/* harmony import */ var next_font_local_target_css_path_src_fonts_index_ts_import_arguments_src_CrimsonText_ttf_display_swap_preload_true_variableName_CrimsonText___WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_font_local_target_css_path_src_fonts_index_ts_import_arguments_src_CrimsonText_ttf_display_swap_preload_true_variableName_CrimsonText___WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n // // View at https://fonts.google.com/specimen/Pacifico?subset=vietnamese\n // export const PacificoText = localFont({\n //   src: \"./PacificoFont.ttf\",\n //   display: \"swap\",\n //   preload: true,\n // });\n // // View at https://fonts.google.com/specimen/Lobster?subset=vietnamese\n // export const LobsterText = localFont({\n //   src: \"./LobsterFont.ttf\",\n //   display: \"swap\",\n // });\n // // View at https://fonts.google.com/specimen/Signika+Negative?subset=vietnamese\n // export const SignikaNegativeText = localFont({\n //   src: \"./SignikaNegativeFont.ttf\",\n //   display: \"swap\",\n // });\n // // View at https://fonts.google.com/specimen/Baloo+Bhaijaan+2?subset=vietnamese\n // export const BalooText = localFont({\n //   src: \"./BalooBhaijaanFont.ttf\",\n //   display: \"swap\",\n // });\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZm9udHMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR2FBO0FBT0FDO0FBUEFEO0FBT0FDO0NBTWIsMEVBQTBFO0NBQzFFLDBDQUEwQztDQUMxQywrQkFBK0I7Q0FDL0IscUJBQXFCO0NBQ3JCLG1CQUFtQjtDQUNuQixNQUFNO0NBRU4seUVBQXlFO0NBQ3pFLHlDQUF5QztDQUN6Qyw4QkFBOEI7Q0FDOUIscUJBQXFCO0NBQ3JCLE1BQU07Q0FFTixrRkFBa0Y7Q0FDbEYsaURBQWlEO0NBQ2pELHNDQUFzQztDQUN0QyxxQkFBcUI7Q0FDckIsTUFBTTtDQUVOLGtGQUFrRjtDQUNsRix1Q0FBdUM7Q0FDdkMsb0NBQW9DO0NBQ3BDLHFCQUFxQjtDQUNyQixNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9mb250cy9pbmRleC50cz9kOGZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2NhbEZvbnQgZnJvbSBcIm5leHQvZm9udC9sb2NhbFwiO1xuXG4vLyBWaWV3IGF0IGh0dHBzOi8vZm9udHMuZ29vZ2xlLmNvbS9zcGVjaW1lbi9HcmVhdCtWaWJlcz9zdWJzZXQ9dmlldG5hbWVzZVxuZXhwb3J0IGNvbnN0IEdyZWF0VmliZXMgPSBsb2NhbEZvbnQoe1xuICBzcmM6IFwiLi9HcmVhdFZpYmVzLnR0ZlwiLFxuICBkaXNwbGF5OiBcInN3YXBcIixcbiAgcHJlbG9hZDogdHJ1ZSxcbn0pO1xuXG4vLyBWaWV3IGF0IGh0dHBzOi8vZm9udHMuZ29vZ2xlLmNvbS9zcGVjaW1lbi9Dcmltc29uK1RleHQ/c3Vic2V0PXZpZXRuYW1lc2VcbmV4cG9ydCBjb25zdCBDcmltc29uVGV4dCA9IGxvY2FsRm9udCh7XG4gIHNyYzogXCIuL0NyaW1zb25UZXh0LnR0ZlwiLFxuICBkaXNwbGF5OiBcInN3YXBcIixcbiAgcHJlbG9hZDogdHJ1ZSxcbn0pO1xuXG4vLyAvLyBWaWV3IGF0IGh0dHBzOi8vZm9udHMuZ29vZ2xlLmNvbS9zcGVjaW1lbi9QYWNpZmljbz9zdWJzZXQ9dmlldG5hbWVzZVxuLy8gZXhwb3J0IGNvbnN0IFBhY2lmaWNvVGV4dCA9IGxvY2FsRm9udCh7XG4vLyAgIHNyYzogXCIuL1BhY2lmaWNvRm9udC50dGZcIixcbi8vICAgZGlzcGxheTogXCJzd2FwXCIsXG4vLyAgIHByZWxvYWQ6IHRydWUsXG4vLyB9KTtcblxuLy8gLy8gVmlldyBhdCBodHRwczovL2ZvbnRzLmdvb2dsZS5jb20vc3BlY2ltZW4vTG9ic3Rlcj9zdWJzZXQ9dmlldG5hbWVzZVxuLy8gZXhwb3J0IGNvbnN0IExvYnN0ZXJUZXh0ID0gbG9jYWxGb250KHtcbi8vICAgc3JjOiBcIi4vTG9ic3RlckZvbnQudHRmXCIsXG4vLyAgIGRpc3BsYXk6IFwic3dhcFwiLFxuLy8gfSk7XG5cbi8vIC8vIFZpZXcgYXQgaHR0cHM6Ly9mb250cy5nb29nbGUuY29tL3NwZWNpbWVuL1NpZ25pa2ErTmVnYXRpdmU/c3Vic2V0PXZpZXRuYW1lc2Vcbi8vIGV4cG9ydCBjb25zdCBTaWduaWthTmVnYXRpdmVUZXh0ID0gbG9jYWxGb250KHtcbi8vICAgc3JjOiBcIi4vU2lnbmlrYU5lZ2F0aXZlRm9udC50dGZcIixcbi8vICAgZGlzcGxheTogXCJzd2FwXCIsXG4vLyB9KTtcblxuLy8gLy8gVmlldyBhdCBodHRwczovL2ZvbnRzLmdvb2dsZS5jb20vc3BlY2ltZW4vQmFsb28rQmhhaWphYW4rMj9zdWJzZXQ9dmlldG5hbWVzZVxuLy8gZXhwb3J0IGNvbnN0IEJhbG9vVGV4dCA9IGxvY2FsRm9udCh7XG4vLyAgIHNyYzogXCIuL0JhbG9vQmhhaWphYW5Gb250LnR0ZlwiLFxuLy8gICBkaXNwbGF5OiBcInN3YXBcIixcbi8vIH0pO1xuIl0sIm5hbWVzIjpbIkdyZWF0VmliZXMiLCJDcmltc29uVGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/fonts/index.ts\n"));

/***/ })

});